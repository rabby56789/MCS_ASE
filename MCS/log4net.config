<log4net>
	<!--預設Log層級根元素-->
	<root>
		<!--Log級別,可用值由高往低:None > Fatal > ERROR > WARN > DEBUG > INFO > ALL -->
		<!--在程式中紀錄的Log級別若低於此設定時將不會記錄至日誌中-->
		<level value="ALL"/>
		<!--要套用的紀錄設定值-->
		<appender-ref ref="RollingFileAppender"/>
	</root>
	<!--對應Log紀錄方式設定值-->
	<appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
		<!--滾動新增Log檔分割方式:可用值:Size,Date,Composite-->
		<rollingStyle value="Composite"/>
		<!--檔案路徑與檔名(rollingStyle不為Date時需指定檔名,rollingStyle為Date時會以此為前綴後加上datePattern的值 : [file][datePattern])-->
		<file value="logs\api_log_"/>
		<!--單檔最大檔案大小(rollingStyle=Composite,Size時有效,超過時自動生成新檔案)-->
		<maximumFileSize value="3MB"/>
		<!--滾動新增檔名日期格式(rollingStyle=Composite,Date時有效,若有固定字元加在單引號''中)-->
		<datePattern value="yyyy_MMdd_HH'.log'" />
		<!--最大檔案數量,超過時從第一個檔案開始覆蓋,-1表示無上限-->
		<maxSizeRollBackups value="-1"/>
		<!--是否使用靜態檔名-->
		<staticLogFileName value="false"/>
		<!--滾動新增是否追加檔案,若為false時會覆蓋同名檔案的內容,-->
		<appendToFile value="true"/>
		<!--是否保留檔案副檔名-->
		<preserveLogFileNameExtension value="true"/>
		<layout type="log4net.Layout.PatternLayout">
			<!--
			紀錄文字格式: 對應參數:
			%date : 日期(格式: yyyy-MM-dd HH:mm:ss,SSS)
			%thread : 執行緒編號／名稱
			%level  : 事件級別,可在程式碼呼叫的為: FATAL < ERROR < WARN < INFO < DEBUG (依等級分類)
			%logger : 紀錄該Log的來源Class名稱,預設為全部填寫 格式: [namespace].[className]
			%message (%m) : 訊息內容
			%newline (%n) : 換行
			
			
			參數顯示格式調整: %-[最小字元長度].[最大字元長度][參數名稱] (%-5.10date : 顯示最小字元長度為5個字元,最大字元長度為10個字元的日期)
			<param name="ConversionPattern" value="%-10date [%P{addr}] - %m %n"/>
			-->
			
			<conversionPattern value="[%date] %thread -- %-5level -- %logger [%M] -- %newline    %message%newline" />
		</layout>
	</appender>
</log4net>