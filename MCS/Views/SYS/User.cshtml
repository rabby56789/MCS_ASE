<!--此頁為單Table UI 標準格式範本-->
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!--單頁功能獨立樣式表-->
@section Custom
{
    <link href="~/Content/jq-content.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/jq-bootstrap-modal.css" rel="stylesheet" type="text/css" />
}

<div id="content" class="content-page">
    <input type="hidden" id="funcName" value="user" /> <!--頁面功能名稱,每頁必加-->
    <!--查詢條件區域-->
    <div class="form-group search-form">
        <div class="button btn-block" type="button" data-toggle="collapse" data-target="#searchConditions" aria-expanded="true" aria-controls="searchConditions">
            <span data-lngKey="searchCondition" class="caret"></span>
        </div>
        <div id="searchConditions" class="collapse show search-content">
            <div class="row">
                <div class="col-md-6">
                    <!--floating-labels使用必加div外框與class屬性-->
                    <div class="form-label-group in-border must-input">
                        <input id="query_id" type="text" class="form-control" />
                        <!--label必須放在input之後,否則文字會在輸入框內-->
                        <!--必填欄位 form-lebel-group 層div 必須加 must-input 的Class屬性-->
                        <label data-lngKey="id" class="font-weight-bold" for="query_id"></label>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-label-group in-border must-input">
                        <input id="query_employeeId" type="text" class="form-control" />
                        <label data-lngKey="employeeId" class="font-weight-bold" for="query_employeeId"></label>
                    </div>
                </div>
                @*<div class="col-md-3 form-group">
                        <div class="form-label-group in-border">
                            <select id="query_factory" class="form-control">
                                <option data-lngKey="plzChoice" value="" selected></option>
                                <option value="">AAA</option>
                                <option value="">BBB</option>
                                <option value="">CCC</option>
                            </select>
                            <label data-lngKey="group" for="query_factory"></label>
                        </div>
                    </div>*@
                <div class="col-md-3 form-group">
                    <label class="icon-datepicker"></label>
                    <div class="form-label-group in-border">
                        <!--日期元件屬性 type="text" class="date"-->
                        <input type="text" id="query_insertDateStart" class="form-control date">
                        <label data-lngKey="createDayBegin" for="query_insertDateStart"></label>
                    </div>
                </div>
                <div class="col-md-3 form-group">
                    <label class="icon-datepicker"></label>
                    <div class="form-label-group in-border">
                        <!--時間元件屬性 type="text" class="time"-->
                        <input type="text" id="query_insertTimeStart" class="form-control time">
                        <label data-lngKey="createTimeBegin" for="query_insertTimeStart"></label>
                    </div>
                </div>
                <div class="col-md-3 form-group">
                    <label class="icon-datepicker"></label>
                    <div class="form-label-group in-border">
                        <input type="text" id="query_insertDateEnd" class="form-control date">
                        <label data-lngKey="createDayEnd" for="query_insertDateEnd"></label>
                    </div>
                </div>
                <div class="col-md-3 form-group">
                    <label class="icon-datepicker"></label>
                    <div class="form-label-group in-border">
                        <input type="text" id="query_insertTimeEnd" class="form-control time">
                        <label data-lngKey="createTimeEnd" for="query_insertTimeEnd"></label>
                    </div>
                </div>
                @*<div class="col-md-6">
                        <label class="icon-datepicker" for="iptTime"></label>
                        <div class="form-label-group in-border">
                            <input id="queryDateTimeRange" class="date-time-range form-control" type="text" aria-label="日期時間區間" />
                            <label for="queryDateTimeRange" class="">日期時間區間(元件展示用不列入查詢條件)</label>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label class="icon-datepicker"></label>
                        <div class="form-label-group in-border">
                            <input id="queryDateRange" class="date-range form-control" type="text" placeholder="請選擇日期區間" aria-label="日期區間" />
                            <label for="queryDateRange" class="">日期區間(元件展示用不列入查詢條件)</label>
                        </div>
                    </div>*@
                @*<div class="col-md-9 align-items-center form-group">
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="form-control custom-control-input" id="query_authorityStatus">
                            <label data-lngKey="notShowSuspension" class="custom-control-label" for="query_authorityStatus">不顯示停權人員</label>
                        </div>
                    </div>*@
                <div class="col-md align-self-end align-items-end form-group">
                    <button data-lngKey="search" type="button" id="btnQuery" class="button float-right log"></button>
                </div>
            </div>
        </div>
    </div>

    <!--資料顯示表格區-->
    <div class="tableParent">
        <div id="toolbar">
            <a href="#" id="btnAdd" class="easyui-linkbutton log" plain="true" data-lngKey="add"><i class="fas fa-file-medical fa-lg"></i></a>
            <a href="#" id="btnEdit" class="easyui-linkbutton log" plain="true" data-lngKey="edit"><i class="fas fa-file-signature fa-lg"></i></a>
            <a href="#" id="btnDelete" class="easyui-linkbutton log" plain="true" data-lngKey="delete"><i class="fas fa-trash-alt fa-lg"></i></a>
            <a href="#" id="btnExportOnGrid" class="easyui-linkbutton log" plain="true" data-lngKey="exportExcel"><i class="fas fa-file-export fa-lg"></i></a>
        </div>
        <table id="dg"></table>
    </div>

    <!--彈出式編輯視窗-->
    <div id="modal_edit" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title"><span id="span_action"></span></h4>
                    <button type="button" id="btnCloseModal_edit" class="close log" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <form id="form_edit">
                        <div class="row">
                            <div id="divAdd" class="col-md-12 form-group">
                                <div class="form-label-group in-border must-input agv-content">
                                    <input id="edit_employee" name="EMPLOYEE_GUID" class="form-control" />
                                    <label for="edit_employee" data-lngKey="employeeId"></label>
                                    <button data-target-name="query_employee" type="button" id="btnEmployee" class="button queryBtn float-right">
                                        <i class="fas fa-external-link-alt"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="col-md-6 form-group">
                                <!--floating-labels使用必加div外框與class屬性-->
                                <div class="form-label-group in-border must-input">
                                    <input id="edit_id" type="text" class="form-control" />
                                    <!--label必須放在input之後,否則文字會在輸入框內-->
                                    <!--必填欄位 form-lebel-group 層div 必須加 must-input 的Class屬性-->
                                    <label data-lngKey="id" for="edit_id"></label>
                                </div>
                            </div>
                            <div class="col-md-6 form-group">
                                <div class="form-label-group in-border must-input">
                                    <input id="edit_password" type="password" class="form-control" />
                                    <label for="edit_password" data-lngKey="password"></label>
                                </div>
                            </div>
                            <div class="col-md-12 form-group">
                                <div class="form-label-group in-border">
                                    <input id="edit_remark" type="text" class="form-control" />
                                    <label for="edit_remark" data-lngKey="remark"></label>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnAccept" class="btn btn-primary log ajaxRequest" data-dismiss="modal" data-lngKey="confirm">確定</button>
                </div>
            </div>
        </div>
    </div>

    <!--關聯表新增選擇視窗-->
    <div id="modal_addBind" class="modal fade" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 id="bindModalTitle" class="modal-title"></h4>
                    <button type="button" id="btnCloseModal_edit" class="close log" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <form id="formQueryB">
                        <div class="row">
                            <div class="col-md-10 form-group">
                                <div class="form-label-group in-border">
                                    <input id="queryBind_storageId" name="ID" type="text" class="form-control" />
                                    <label for="queryBind_storageId" data-lngKey="id"></label>
                                </div>
                            </div>
                            <div class="col-md-2 form-group">
                                <button type="button" id="btnQueryTableB" class="btn btn-primary log ajaxRequest" data-lngKey="search"></button>
                            </div>
                        </div>
                    </form>
                    <table id="dgB"></table>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnChoose" class="btn btn-primary log ajaxRequest" data-dismiss="modal" data-lngKey="ok"></button>
                </div>
            </div>
        </div>
    </div>
</div>

<!--畫面動作-->
<script>
    let action = "";
    let selectedIndex;
    let selectedGUID;
    let queryParams;
    let doc;
    let employeeguid = "";

    //頁面元件初始化
    function PageInit() {
        $('#dg').datagrid({
            url: '../api/ApiUser/Query',
            method: 'POST',
            toolbar: '#toolbar',
            singleSelect: true,
            pagination: true, //顯示資料換頁工具列
            fit: true, //固定Grid高度,需指定
            sortName: 'ID',
            emptyMsg: '<div style="text-align:center">No data.</div>',
            columns: [[
                { field: 'GUID', title: '', width: '0%', hidden: true },
                { field: 'ID', title: doc.getTextByKey('id'), width: '15%', sortable: true },
                { field: 'EMPLOYEE_ID', title: doc.getTextByKey('employeeId'), width: '15%', sortable: true },
                { field: 'INSERT_TIME', title: doc.getTextByKey('createTime'), width: '15%', formatter: convertTime },
                { field: 'REMARK', title: doc.getTextByKey('remark'), width: '55%' }
            ]],
            onSelect: function (index, field) {
                selectedGUID = field.GUID;
                selectedIndex = index;

                $('#btnEdit').linkbutton('enable');
                $('#btnDelete').linkbutton('enable');

            }, onBeforeLoad: function (param) {
                if (action != 'query') {
                    return false; //預設初次載入頁面不查詢
                } else {
                    param.total = queryParams.total;
                    param.NAME = queryParams.NAME;
                    param.ID = queryParams.ID;
                    param.INSERT_TIME_START = queryParams.INSERT_TIME_START;
                    param.INSERT_TIME_END = queryParams.INSERT_TIME_END;
                }
            }, onLoadSuccess: function (rows) {
                selectedGUID = undefined;
                selectedIndex = undefined;

                $('#btnEdit').linkbutton('disable');
                $('#btnDelete').linkbutton('disable');
                //bindresize(this);
            }
        });

        //資料換頁工具列文字顯示
        var p = $('#dg').datagrid('getPager');
        $(p).pagination({
            pageSize: 10,
            pageList: [5, 10, 15],
            beforePageText: doc.getTextByKey('beforePageText'),
            afterPageText: doc.getTextByKey('afterPageText'),
            displayMsg: doc.getTextByKey('displayMsg')
        });

        $('#btnEdit').linkbutton('disable');
        $('#btnDelete').linkbutton('disable');
        $('#btnExportOnGrid').linkbutton('disable');

        //refreshDorpDownListItems('query_factory', '../api/ApiUser/GetListOfFactory');
        //refreshDorpDownListItems('query_phase');
        //refreshDorpDownListItems('query_depart');
        //refreshDorpDownListItems('query_company');

        //停用輸入欄位的自動完成
        let inputs = document.getElementsByTagName("input");
        for (let i = 0; i < inputs.length; i++) {
            inputs[i].autocomplete = 'off';
        }

        //套用浮動輸入欄位標籤樣式
        let labels = document.getElementsByTagName('LABEL');
        for (let i = 0; i < labels.length; i++) {
            if (labels[i].htmlFor != '') {
                let elem = document.getElementById(labels[i].htmlFor);
                if (elem) {
                    elem.setAttribute("placeholder", labels[i].textContent);
                }
            }
        }

        //#region 彈出視窗設定
        $('#modal_edit').modal({
            show: false, //預設不顯示
            backdrop: 'static', //彈出視窗點背景無法關閉
            keyboard: false, //按Esc鍵不會關閉視窗
        });

        //#endregion

        setNotNull();
    }

    //事件綁定
    function PageEventBind() {
        $('#btnQuery').on('click', Query);
        $('#btnAdd').on('click', Add);
        $('#btnEdit').on('click', Edit);
        $('#btnDelete').on('click', Delete);
        $('#btnExportOnGrid').on('click', ExportOnClick);
        $('#btnAccept').on('click', Accept);
        $('.btn-confirm').on('click', Confirm);
        $('#btnEmployee').on('click', selectBindDataClick);
        $('#btnQueryTableB').on('click', queryB);//B表(部門/職稱)查詢按鈕

        $('#query_factory').on('change', onSelectOptionChange);
        $('#query_phase').on('change', onSelectOptionChange);
        $('#query_depart').on('change', onSelectOptionChange);

        $('#modal_edit').on('show.bs.modal', onEditModalShow);
        $('#modal_addBind').on('show.bs.modal', beforeBindModalShow);
        $('#modal_addBind').on('shown.bs.modal', onBindModalShow);
        $('#btnChoose').on('click', tableBclose);

        $(window).on("resize", resizeLayout);

        //設定事件綁定
        bindActionEvent();
        bindAjaxEvent();
    }

    //重設頁面元件大小
    function resizeLayout() {
        //重設手風琴選單大小
        $('#queryConditionPanel').accordion('resize');
        //重設Grid大小
        $('#dg').datagrid('resize');
    }

    //必填欄位上色
    function setNotNull(tableName) {
        $('#edit_name').addClass('required');
        $('#edit_id').addClass('required');
        $('#edit_factory').addClass('required');
        $('#edit_phase').addClass('required');
        $('#edit_depart').addClass('required');
    }

    //查詢
    function Query() {
        action = 'query';
        selectedGUID = undefined;
        selectedIndex = undefined;

        $('#btnEdit').linkbutton('disable');
        $('#btnDelete').linkbutton('disable');

        //#region 取得日期時間元件資料內容
        //取得單一日期
        let objDateStart = $('#query_insertDateStart').datepicker().data('datepicker').selectedDates[0];
        let objDateEnd = $('#query_insertDateEnd').datepicker().data('datepicker').selectedDates[0];

        //取得單一時間


        //取得日期時間區間
        //let dateTimeRange = $('#queryDateTimeRange').datepicker().data('datepicker').selectedDates;


        //取得日期區間

        //#endregion
        let dateStart = !objDateStart ? "" : objDateStart.DTformatJtoC();
        let dateEnd = !objDateEnd ? "" : objDateEnd.DTformatJtoC();

        if (dateTimeValidation(dateStart, dateEnd, '<=') == false) {
            toastr.error(
                globalDoc.getTextByKey('error'),
                globalDoc.getTextByKey('dateRangeError')
            );
            return;
        }

        queryParams = {
            ID: $('#query_id').val(),

            INSERT_TIME_START: dateStart,
            INSERT_TIME_END: dateEnd,
            //NOT_AUTHORITY: $('#query_authorityStatus').is(":checked") ? true : false
        };

        $.post(
            "../api/ApiUser/Count",
            queryParams,
            function (response) {
                let Count = response.rows[0].Count;
                queryParams.total = Count;
                queryParams.sort = 'ID';
                queryParams.order = 'asc';
                queryParams.rows = '10';
                queryParams.page = '1';

                if (Count > 1000) {
                    JQMessageBox(
                        globalDoc.getTextByKey('confirm'),
                        globalDoc.getTextByKey('over1000'),
                        {
                            'Y': globalDoc.getTextByKey('y'),
                            'N': globalDoc.getTextByKey('n'),
                            "export": globalDoc.getTextByKey('expXls')
                        },
                        Confirm
                    );
                }
                else { LoadData(queryParams); }
            });
    }

    //查詢:Show至Grid上
    async function LoadData(params) {
        //LOG:執行前抓SQL與紀錄執行前時間
        let getSqlSucceed = await getSql($('#funcName').val(), 'Query', queryParams);

        $.ajax({
            type: "POST",
            url: "../api/ApiUser/Query",
            data: params,
            dataType: "json",
            complete: function (jqXHR, textStatus) { //成功或失敗均會執行
                if (textStatus == "success") {
                    $("#dg").datagrid('loadData', jqXHR.responseJSON);
                    $('#dg').datagrid('gotoPage', 1); //強制返回第一頁
                    $('#btnExportOnGrid').linkbutton('enable');

                    //LOG:紀錄執行時間差
                    if (getSqlSucceed) {
                        saveRequestPerformanceLog(
                            sessionStorage.getItem('userGuid'),
                            sessionStorage.getItem('groupId')
                        );
                    }
                }
                //執行完畢重啟按鈕
                $('.ajaxRequest').attr('disabled', false);
            }
        })
    }

    //新增,清空欄位後開窗
    function Add() {
        if ($(this).linkbutton('options').disabled == true) return;

        action = 'add';
        selectedGUID = "";
        employeeguid = "";

        $('#edit_id').val('');
        $('#edit_password').val('');
        $('#edit_remark').val('');
        $('#edit_employee').val('');

        $('#modal_edit').modal('show');
    }

    //編輯
    function Edit() {
        if ($(this).linkbutton('options').disabled == true) return;

        let data = { GUID: selectedGUID };
        action = 'edit';

        $.ajax({
            type: "POST",
            url: "../api/ApiUser/GetOneByGUID",
            data: data,
            dataType: "json",
            success: function (data) {
                let userData = data.rows[0];
                employeeguid = userData.EMPLOYEE_GUID;
                $('#edit_employee').val(userData.EMPLOYEE);
                $('#edit_id').val(userData.ID);
                $('#edit_password').val(userData.PASSWORD);
                $('#edit_remark').val(userData.REMARK);
            },
            complete: function (url) {
                $('#modal_edit').modal('show');
            }
        });
    }

    //刪除
    function Delete() {
        if ($(this).linkbutton('options').disabled == true) return;

        action = 'delete';

        JQMessageBox(
            globalDoc.getTextByKey('delete'),
            globalDoc.getTextByKey('delMsg'),
            {
                'Y': globalDoc.getTextByKey('ok'),
                'N': globalDoc.getTextByKey('cancel')
            },
            Confirm
            , 0
        );
    }

    //事件:顯示資料編輯視窗,動態更新標題用
    function onEditModalShow(e) {
        let formTitle = $('#span_action')[0];

        switch (action) {
            case "add":
                formTitle.innerText = globalDoc.getTextByKey("add");
                break;
            case "edit":
                formTitle.innerText = globalDoc.getTextByKey("edit");
                break;
        }

        $('#btnAccept').text(globalDoc.getTextByKey("ok"));
    }

    //匯出(從DataGrid)
    function ExportOnClick() {
        if ($(this).linkbutton('options').disabled == true) return;
        Export();
    }

    //匯出(從DB)
    function Export() {
        $.post("../api/ApiUser/Export", queryParams, function (response) {
            let url = response.filePath;
            let $a = $('<a />', {
                'href': url,
                'download': null,
                'text': "click"
            }).hide().appendTo("body")[0].click();

            URL.revokeObjectURL(url);
            $('.ajaxRequest').attr('disabled', false);
        });
    }

    //資料異動確認
    async function Accept() {
        let actionUrl, data;

        $('#modal_edit').modal('hide');

        data = {
            EMPLOYEE_GUID: employeeguid,
            ID: $('#edit_id').val(),
            PASSWORD: $('#edit_password').val(),
            REMARK: $('#edit_remark').val()
        };

        if (action == "add") {
            data.INSERT_USER = sessionStorage.getItem("userGuid");
        } else {
            data.GUID = selectedGUID
            data.UPDATE_USER = sessionStorage.getItem("userGuid");
        }

        switch (action) {
            case "add":
                actionUrl = "../api/ApiUser/Insert";
                break;
            case "edit":
                actionUrl = "../api/ApiUser/Update";
                break;
            case "delete":
                actionUrl = "../api/ApiUser/Delete";
                break;
        }

        let getSqlSucceed = await getSql($('#funcName').val(), action, data);

        $.ajax({
            type: "POST",
            url: actionUrl,
            data: data,
            dataType: "json",
            success: function (response) {
                if (response.result == false) {
                    toastr.error(
                        globalDoc.getTextByKey('error'),
                        globalDoc.getTextByKey(`${response.msg}`)
                    );
                }
                else {
                    toastr.success(
                        globalDoc.getTextByKey('succeed'),
                        globalDoc.getTextByKey('prompt')
                    );
                }
                
                if (getSqlSucceed) {
                    saveRequestPerformanceLog(
                        sessionStorage.getItem('userGuid'),
                        sessionStorage.getItem('groupId')
                    );
                }

                Query();

                $('.ajaxRequest').attr('disabled', false);
            }
        });
    }

    //確認視窗按鈕動作
    function Confirm(btnVal) {
        switch (btnVal) {
            case 'Y':
                switch (action) {
                    case 'query':
                        LoadData(queryParams);
                        break;
                    case 'delete':
                        Accept();
                        break;
                }
                break;
            case 'N':

                break;
            case 'export':
                Export();
                break;
        }
    }

    //B表(部門/職稱) 查詢按鈕觸發
    function queryB() {
        queryParamsB = new Object();
        queryParamsB = $('#formQueryB').serializeObject();
        $('#dgB').datagrid('options').queryParams = queryParamsB;
        $('#dgB').datagrid('gotoPage', 1);
    }

    //B表(員工)datagrid顯示
    function tableInitB() {
        
        $('#dgB').datagrid({
            url: dataurl,
            method: 'POST',
            singleSelect: true,
            pagination: true, //顯示資料換頁工具列
            height: 350,
            sortName: 'ID',
            emptyMsg: '<div style="text-align:center">No data.</div>',
            columns: [[
                { field: 'GUID', title: '', width: '0%', hidden: true },
                { field: 'ID', title: doc.getTextByKey('employeeId'), width: '20%', sortable: true },
                { field: 'NAME', title: doc.getTextByKey('employeeName'), width: '20%', sortable: true },
                { field: 'DEPARTMENT', title: doc.getTextByKey('department'), width: '30%', sortable: true },
                { field: 'TITLE', title: doc.getTextByKey('title'), width: '30%', sortable: true }
            ]],
            onSelect: function (index, field) {
                $('#btnChoose').attr('disabled', false);
                employeeguid = field.GUID;
                $('#edit_employee').val(field.NAME);
            }, onBeforeLoad: function (param) {
                if (queryParamsB === null) {
                    return false; //無參數時不查詢
                } else {
                    //param.USER_ID = queryParamsB.USER_ID;
                    //param.EMPLOYEE_ID = queryParamsB.EMPLOYEE_ID;
                }
            }, onLoadSuccess: function (rows) {
                $('#btnQueryTableB').attr('disabled', false);
                $('#btnChoose').attr('disabled', true);
                guidB = null;
            }
        });

        //#region 資料換頁工具列文字顯示
        var p = $('#dgB').datagrid('getPager');
        $(p).pagination({
            pageSize: 10,
            pageList: [5, 10, 15],
            beforePageText: doc.getTextByKey('beforePageText'),
            afterPageText: doc.getTextByKey('afterPageText'),
            displayMsg: doc.getTextByKey('displayMsg')
        });
        //#endregion 
        //$('.datagrid-header-check').html("<span>" + globalDoc.getTextByKey("checked") + "</span>");
    }
    //事件:搜尋B表(員工)
    function selectBindDataClick(e) {
        let clickedBtn = e.currentTarget;

        //if ($(clickedBtn).linkbutton('options').disabled == true) return;       
        $('#modal_addBind').modal('toggle');
        dataurl = '../api/ApiUser/QueryEmployee';

    }

    //事件:關聯資料選擇視窗開啟(前)
    function beforeBindModalShow(e) {
        let inputElms = document.forms["formQueryB"].getElementsByTagName("input");
        //清空輸入欄位
        for (let i = 0; i < inputElms.length; i++) {
            inputElms[i].value = "";
        }
        //變更標題
        $('#bindModalTitle').text(doc.getTextByKey("selectFunctionToGroup"));
        queryParamsB = null;
    }

    //事件:關聯資料選擇視窗開啟
    function onBindModalShow(e) {
        $('#btnChoose').text(globalDoc.getTextByKey('ok'));
        tableInitB();
        $('#dgB').datagrid('loadData', { "total": 0, "rows": [] });
        $('#btnChoose').attr('disabled', true);
    }

    //B表 選擇區域確定(關閉B表)
    function tableBclose() {
        $('#modal_addBind').modal('hide');
    }

    //[DataGrid]轉換時間格式
    function convertTime(value, row, index) {
        return value.replace('T', ' ');
    }

    //#region 下拉選單方法群

    //刷新下拉選單項目(參數:目標select元件ID,資料來源URL,傳送參數) [是否移至共用區?]
    function refreshDorpDownListItems(targetSelectElementId, dataSourceUrl, parameters) {
        let elm = $('#' + targetSelectElementId);
        let optionElm = document.createElement("option");
        optionElm.setAttribute("value", "");

        //setElmLanguage(optionElm, "plzChoice");

        //移除並加入預設選項
        elm.find('option').remove().end();
        elm.append(optionElm);

        //沒輸入資料來源Url直接結束
        if (typeof (dataSourceUrl) == undefined) {
            return;
        }

        $.ajax({
            type: "POST",
            url: dataSourceUrl,
            data: parameters,
            dataType: "json",
            success: function (data) {
                data.rows.forEach(function (item) {
                    elm.append(`<option value="${item.Key}">${item.Value}</option>`);
                });

                elm.prop('selectedIndex', 0);
            }
        });
    }

    //下拉選單更改選取
    function onSelectOptionChange(e) {
        let targetId = e.target.id;
        let selectedValue = e.target.value;

        //依照更改下拉選單關聯性刷新
        switch (targetId) {
            case "query_factory": //廠
                refreshDorpDownListItems('query_phase');
                refreshDorpDownListItems('query_depart');
                refreshDorpDownListItems('query_company');
                break;
            case "query_phase": //區
                refreshDorpDownListItems('query_depart');
                refreshDorpDownListItems('query_company');
                break;
            case "query_depart": //部門
                refreshDorpDownListItems('query_company');
                break;
        }

        if (selectedValue != "") {
            switch (targetId) {
                case "query_factory":  //廠->區
                    refreshDorpDownListItems('query_phase', '../api/ApiUser/GetListOfPhase', { "FACTORY": selectedValue });
                    break;
                case "query_phase": //區->部門
                    refreshDorpDownListItems('query_depart', '../api/ApiUser/GetListOfDepart', { "PHASE": selectedValue });
                    break;
                case "query_depart": //部門->委外廠商
                    refreshDorpDownListItems('query_company', '../api/ApiUser/GetListOfCompany', { "DEPART": selectedValue });
                    break;
            }
        }
    }
    //#endregion

    //#region 驗證方法群
    //日期驗證(日期A,日期B,條件:=>,<=)
    function dateTimeValidation(dateTimeA, dateTimeB, condition) {
        let offset = Date.parse(dateTimeA).valueOf() - Date.parse(dateTimeB).valueOf();

        if (Number.isNaN(offset)) {
            return true;
        }

        switch (condition) {
            case '<=':
                return offset <= 0 ? true : false;
                break;
            case '>=':
                return offset >= 0 ? true : false;
                break;
            case '<':
                return offset < 0 ? true : false;
                break;
            case '>':
                return offset > 0 ? true : false;
                break;
        }
    }
    //#endregion

    $(function () {
        doc = new Doc($('#funcName').val(), sessionStorage.getItem('userLng'), 'content');
        doc.searchFile().then((val) => {
            doc.converStaticElm("content");
            PageInit();
            PageEventBind();

        });
    });
</script>