@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--此頁為雙Table UI 標準格式範本-->
<div id="content" class="content-page">
    <input type="hidden" id="funcName" value="factoryfloor" /> <!--頁面功能名稱,每頁必加-->
    <!--查詢條件區域-->
    <div class="form-group search-form">
        <div class="button btn-block" type="button" data-toggle="collapse" data-target="#searchConditions" aria-expanded="true" aria-controls="searchConditions">
            <span data-lngKey="searchCondition" class="caret"></span>
        </div>
        <div id="searchConditions" class="collapse show search-content">
            <form id="formQueryA">
                <div class="row">
                    <div class="col-md-6">
                        <!--floating-labels使用必加div外框與class屬性-->
                        <div class="form-label-group in-border">
                            <input id="query_id" name="ID" type="text" class="form-control" />
                            <!--label必須放在input之後,否則文字會在輸入框內-->
                            <label data-lngKey="ida" for="query_id"></label>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-label-group in-border">
                            <input id="query_name" name="NAME" type="text" class="form-control" />
                            <label data-lngKey="namea" for="query_name"></label>
                        </div>
                    </div>
                    <div class="col-md align-self-auto align-items-baseline form-group">
                        <hr />
                        <button data-lngKey="search" type="button" id="btnQuery" class="button float-right log"></button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <!--A表-->
    <div class="tableParent" style="width: 100%;height:40vh">
        <div id="toolbarA">
            <a href="#" id="btnAdd_A" class="easyui-linkbutton log btnA" iconCls="icon-add" plain="true" data-lngKey="add">新增</a>
            <a href="#" id="btnEdit_A" class="easyui-linkbutton log btnA" iconCls="icon-edit" plain="true" data-lngKey="edit">編輯</a>
            <a href="#" id="btnDelete_A" class="easyui-linkbutton log btnA" iconCls="icon-remove" plain="true" data-lngKey="delete">刪除</a>
            <a href="#" id="btnImport_A" class="easyui-linkbutton log btnA" iconCls="icon-print" plain="true" data-lngKey="import">匯入</a>
        </div>
        <table id="dgA"></table>
    </div>
    <div style="height:10px"></div>
    <!--關聯表-->
    <div class="tableParent" style="width: 100%;height:40vh">
        <div id="toolbarB">
            <a href="#" id="btnAdd_B" class="easyui-linkbutton log btnBind" iconCls="icon-add" plain="true" data-lngKey="add">新增</a>
            <a href="#" id="btnEdit_B" class="easyui-linkbutton log btnBind" iconCls="icon-edit" plain="true" data-lngKey="edit">編輯</a>
            <a href="#" id="btnDelete_B" class="easyui-linkbutton log btnBind" iconCls="icon-remove" plain="true" data-lngKey="delete">刪除</a>
            <a href="#" id="btnImport_B" class="easyui-linkbutton log btnBind" iconCls="icon-print" plain="true" data-lngKey="import">匯入</a>
        </div>
        <div class="row"></div>
        <table id="dgB"></table>
    </div>

    <!--A表彈出式編輯視窗-->
    <div id="modal_edit" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title"><span id="span_action"></span></h4>
                    <button type="button" id="btnCloseModal_edit" class="close log" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <form id="formEditA">
                        <div class="row">
                            <div class="col-md-6 form-group">
                                <!--floating-labels使用必加div外框與class屬性-->
                                <div class="form-label-group in-border must-input">
                                    <input id="edit_id" name="ID" type="text" class="form-control" />
                                    <!--label必須放在input之後,否則文字會在輸入框內-->
                                    <!--必填欄位 form-lebel-group 層div 必須加 must-input 的Class屬性-->
                                    <label data-lngKey="ida" for="edit_id"></label>
                                </div>
                            </div>
                            <div class="col-md-6 form-group">
                                <div class="form-label-group in-border must-input">
                                    <input id="edit_name" name="NAME" type="text" class="form-control" />
                                    <label for="edit_name" data-lngKey="namea"></label>
                                </div>
                            </div>
                            <div class="col-md-12 form-group">
                                <div class="form-label-group in-border">
                                    <input id="edit_remark" name="REMARK" type="text" class="form-control" />
                                    <label for="edit_remark" data-lngKey="remark"></label>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnAcceptEditA" class="btn btn-primary log ajaxRequest" data-dismiss="modal" data-lngKey="ok">確定</button>
                </div>
            </div>
        </div>
    </div>
    <!--B表彈出式編輯視窗-->
    <div id="modal_editb" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title"><span id="span_action"></span></h4>
                    <button type="button" id="btnCloseModal_edit" class="close log" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <form id="formEditB">
                        <div class="row">
                            <div class="col-md-6 form-group">
                                <!--floating-labels使用必加div外框與class屬性-->
                                <div class="form-label-group in-border must-input">
                                    <input id="edit_id" name="ID" type="text" class="form-control" />
                                    <!--label必須放在input之後,否則文字會在輸入框內-->
                                    <!--必填欄位 form-lebel-group 層div 必須加 must-input 的Class屬性-->
                                    <label data-lngKey="idb" for="edit_id"></label>
                                </div>
                            </div>
                            <div class="col-md-6 form-group">
                                <div class="form-label-group in-border must-input">
                                    <input id="edit_name" name="NAME" type="text" class="form-control" />
                                    <label for="edit_name" data-lngKey="nameb"></label>
                                </div>
                            </div>
                            <div class="col-md-12 form-group">
                                <div class="form-label-group in-border">
                                    <input id="edit_remark" name="REMARK" type="text" class="form-control" />
                                    <label for="edit_remark" data-lngKey="remark"></label>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnAcceptEditB" class="btn btn-primary log ajaxRequest" data-dismiss="modal" data-lngKey="ok">確定</button>
                </div>
            </div>
        </div>
    </div>
    <!--關聯表新增選擇視窗-->
    <div id="modal_addBind" class="modal fade" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 id="bindModalTitle" class="modal-title"></h4>
                    <button type="button" id="btnCloseModal_edit" class="close log" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <form id="formQueryB">
                        <div class="row">
                            <div class="col-md-5 form-group">
                                <div class="form-label-group in-border">
                                    <input id="queryBind_userId" name="ID" type="text" class="form-control" />
                                    <label for="queryBind_userId" data-lngKey="userId"></label>
                                </div>
                            </div>
                            <div class="col-md-5 form-group">
                                <div class="form-label-group in-border">
                                    <input id="queryBind_employeeId" name="EMPLOYEE_ID" type="text" class="form-control" />
                                    <label for="queryBind_employeeId" data-lngKey="employeeId"></label>
                                </div>
                            </div>
                            <div class="col-md-2 form-group">
                                <button type="button" id="btnQueryTableB" class="btn btn-primary log ajaxRequest" data-lngKey="search"></button>
                            </div>
                        </div>
                    </form>
                    <table id="dgC"></table>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnAddBind" class="btn btn-primary log ajaxRequest" data-dismiss="modal" data-lngKey="ok"></button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let action = "";
    let queryParamsA;
    let queryParamsBind;
    let queryParamsB;
    let guidA, guidB, guidBind;
    let doc;

    function tableInitA() {
        $('#dgA').datagrid({
            url: '../api/ApiFactoryFloor/QueryA',
            method: 'POST',
            toolbar: '#toolbarA',
            singleSelect: true,
            pagination: true, //顯示資料換頁工具列
            fit: true, //固定Grid高度,需指定
            sortName: 'ID',
            emptyMsg: '<div style="text-align:center">No data.</div>',
            columns: [[
                { field: 'GUID', title: '', width: '0%', hidden: true },
                { field: 'ID', title: doc.getTextByKey('ida'),  sortable: true },
                { field: 'NAME', title: doc.getTextByKey('namea'),  sortable: true },
                { field: 'REMARK', title: doc.getTextByKey('remark') }
            ]],
            onSelect: function (index, field) {
                $('#btnEdit_A').linkbutton('enable');
                $('#btnDelete_A').linkbutton('enable');
                onSelectRowA(field.GUID);
            }, onBeforeLoad: function (param) {
                if (queryParamsA === undefined) {
                    return false; //無參數時不查詢
                } else {
                    //param.total = queryParams.total;
                    //param.ID = queryParams.ID;
                    //param.NAME = queryParams.NAME;
                }
            }, onLoadSuccess: function (rows) {
                guidA = null;

                $('#btnEdit_A').linkbutton('disable');
                $('#btnDelete_A').linkbutton('disable');
            }
        });

        //資料換頁工具列文字顯示
        var p = $('#dgA').datagrid('getPager');
        $(p).pagination({
            pageSize: 10,
            pageList: [5, 10, 15],
            beforePageText: doc.getTextByKey('beforePageText'),
            afterPageText: doc.getTextByKey('afterPageText'),
            displayMsg: doc.getTextByKey('displayMsg')
        });

        $('#btnEdit_A').linkbutton('disable');
        $('#btnDelete_A').linkbutton('disable');
    }

    function tableInitB() {
        $('#dgB').datagrid({
            url: '../api/ApiFactoryFloor/QueryB',
            method: 'POST',
            toolbar: '#toolbarB',
            singleSelect: true,
            pagination: true, //顯示資料換頁工具列
            fit: true, //固定Grid高度,需指定
            sortName: 'ID',
            emptyMsg: '<div style="text-align:center">No data.</div>',
            columns: [[
                { field: 'GUIDA', title: '', width: '0%', hidden: true },
                { field: 'GUIDB', title: '', width: '0%', hidden: true },
                { field: 'NAMEA', title: doc.getTextByKey('namea'), sortable: true },
                { field: 'IDB', title: doc.getTextByKey('idb'),  sortable: true },
                { field: 'NAMEB', title: doc.getTextByKey('nameb'), sortable: true },
                { field: 'REMARK', title: doc.getTextByKey('remark'), sortable: true }
            ]],
            onSelect: function (index, field) {
                guidB = field.GUIDB;
                $('#btnEdit_B').linkbutton('enable');
                $('#btnDelete_B').linkbutton('enable');
            }, onBeforeLoad: function (param) {
                if (queryParamsBind === undefined) {
                    return false; //無參數時不查詢
                } else {
                    param.GUIDA = queryParamsBind.GUIDA;
                }
            }, onLoadSuccess: function (rows) {
                guidB = null;
                $('#btnAdd_B').linkbutton('enable');
                $('#btnEdit_B').linkbutton('disable');
                $('#btnDelete_B').linkbutton('disable');
            }
        });

        //資料換頁工具列文字顯示
        var p = $('#dgB').datagrid('getPager');
        $(p).pagination({
            pageSize: 10,
            pageList: [5, 10, 15],
            beforePageText: doc.getTextByKey('beforePageText'),
            afterPageText: doc.getTextByKey('afterPageText'),
            displayMsg: doc.getTextByKey('displayMsg')
        });

        $('#btnAdd_B').linkbutton('disable');
        $('#btnEdit_B').linkbutton('disable');
        $('#btnDelete_B').linkbutton('disable');
        $('#btnImport_B').linkbutton('disable');

    }

    function tableInitC() {
        $('#dgC').datagrid({
            url: '../api/ApiUser/Query',
            method: 'POST',
            singleSelect: true,
            height: 350,
            pagePosition: 'bottom',
            sortName: 'ID',
            emptyMsg: '<div style="text-align:center">No data.</div>',
            columns: [[
                { field: 'GUID', title: '', width: '0%', hidden: true },
                { field: 'ID', title: doc.getTextByKey('userId'), width: '50%', sortable: true },
                { field: 'NAME', title: doc.getTextByKey('employeeId'), width: '50%', sortable: true }
            ]],
            onSelect: function (index, field) {
                $('#btnAddBind').attr('disabled', false);
                guidB = field.GUID;
            }, onBeforeLoad: function (param) {
                if (queryParamsB === null) {
                    return false; //無參數時不查詢
                } else {
                    //param.USER_ID = queryParamsB.USER_ID;
                    //param.EMPLOYEE_ID = queryParamsB.EMPLOYEE_ID;
                }
            }, onLoadSuccess: function (rows) {
                $('#btnQueryTableB').attr('disabled', false);
                $('#btnAddBind').attr('disabled', true);
                guidB = null;
            }
        });
    }

    function elementInit() {
        //停用輸入欄位的自動完成
        let inputs = document.getElementsByTagName("input");
        for (let i = 0; i < inputs.length; i++) {
            inputs[i].autocomplete = 'off';
        }

        //套用浮動輸入欄位標籤樣式
        let labels = document.getElementsByTagName('LABEL');
        for (let i = 0; i < labels.length; i++) {
            if (labels[i].htmlFor != '') {
                let elem = document.getElementById(labels[i].htmlFor);
                if (elem) {
                    elem.setAttribute("placeholder", labels[i].textContent);
                }
            }
        }

        $('#modal_edit').modal({
            show: false, //預設不顯示
            backdrop: 'static', //彈出視窗點背景無法關閉
            keyboard: false, //按Esc鍵不會關閉視窗
        });
        $('#modal_editb').modal({
            show: false, //預設不顯示
            backdrop: 'static', //彈出視窗點背景無法關閉
            keyboard: false, //按Esc鍵不會關閉視窗
        });
        $('#modal_addBind').modal({
            show: false, //預設不顯示
            backdrop: 'static', //彈出視窗點背景無法關閉
            keyboard: false, //按Esc鍵不會關閉視窗
        });


    }

    function pageEventBind() {
        $('#btnQuery').on('click', () => { queryA(1) });
        $('#modal_edit').on('show.bs.modal', onEditModalShow);
        $('#modal_editb').on('show.bs.modal', onEditModalShowB);
        $('#modal_addBind').on('show.bs.modal', beforeBindModalShow);
        $('#modal_addBind').on('shown.bs.modal', onBindModalShow);

        $('.btnA').on('click', tableAToolBarOnClick);
        $('#btnAcceptEditA').on('click', acceptEditA);
        $('#btnAcceptEditB').on('click', acceptEditB);
        $('.btnBind').on('click', bindTableToolBarOnClick);
        $('#btnQueryTableB').on('click', queryB);
        $('#btnAddBind').on('click', addBind);
    }

    function queryA(pageIdx) {
        action = 'query';

        $('#btnEdit').linkbutton('disable');
        $('#btnDelete').linkbutton('disable');

        queryParamsA = $('#formQueryA').serializeObject();

        new Promise((resolve, reject) => {
            $.ajax({
                type: "POST",
                url: "../api/ApiFactoryFloor/CountA",
                data: queryParamsA,
                dataType: "json",
                success: function (response) {
                    queryParamsA.total = response.rows[0].Count;
                    resolve(queryParamsA);
                }
            });
        }).then((parms) => {
            $('#dgA').datagrid('options').queryParams = parms;
            $('#dgA').datagrid('gotoPage', pageIdx);

            return;
        }).then(() => {
            $('#btnExportOnGrid').linkbutton('enable');
            $('.ajaxRequest').attr('disabled', false);
        });
    }

    function tableAToolBarOnClick(e) {
        let inputElms = document.forms["formEditA"].getElementsByTagName("input");;
        let clickedBtn = e.target;

        if ($(clickedBtn).linkbutton('options').disabled == true) return;

        switch (clickedBtn.id) {
            case "btnAdd_A":
                action = "add";

                for (let i = 0; i < inputElms.length; i++) {
                    inputElms[i].value = "";
                }

                $('#modal_edit').modal('show');
                break;
            case "btnEdit_A":
                action = "edit";
                $.ajax({
                    type: "POST",
                    url: "../api/ApiFactoryFloor/GetOneByGUID",
                    data: { "GUID": guidA },
                    dataType: "json",
                    success: function (data) {
                        inputElms.ID.value = data.rows[0].ID;
                        inputElms.NAME.value = data.rows[0].NAME;
                        inputElms.REMARK.value = data.rows[0].REMARK;
                        $('#modal_edit').modal('show');
                    }
                });
                break;
            case "btnDelete_A":
                action = "delete";
                JQMessageBox(
                    globalDoc.getTextByKey('delete'),
                    globalDoc.getTextByKey('delMsg'),
                    {
                        'Y': globalDoc.getTextByKey('ok'),
                        'N': globalDoc.getTextByKey('cancel')
                    },
                    confirmDelete,
                    0
                );
                break;
        }
    }

    //確認視窗按鈕動作
    function confirmDelete(btnVal) {
        if (btnVal == 'Y') {
            acceptEditA();
        }
    }

    async function acceptEditA() {
        let data, actionUrl;
        let edit_id = $('#edit_id').val();
        $('#modal_edit').modal('hide');

        data = $('#formEditA').serializeObject();
        data2 = $('#formEditA').serializeArray();
        if (action == "add") {
            data.INSERT_USER = sessionStorage.getItem("userGuid");
        } else {
            data.GUID = guidA
            data.UPDATE_USER = sessionStorage.getItem("userGuid");
        }

        switch (action) {
            case "add":
                actionUrl = "../api/ApiFactoryFloor/InsertA";
                
                $('#dgA').datagrid('insertRow', {
                    //index: 15, // 索引從 0
                    row: {
                        ID: edit_id
                    }
                });
                break;
            case "edit":
                actionUrl = "../api/ApiFactoryFloor/UpdateA";
                break;
            case "delete":
                actionUrl = "../api/ApiFactoryFloor/DeleteA";
                break;
        }

        //取得目前頁面
        let currentPage = $('#dgA').datagrid('options').pageNumber;
        let getSqlSucceed = await getSql($('#funcName').val(), action, data);

        $.ajax({
            type: "POST",
            url: actionUrl,
            data: data,
            dataType: "json",
            success: function (response) {
                toastr.success(
                    globalDoc.getTextByKey('succeed'),
                    globalDoc.getTextByKey('prompt')
                );

                if (getSqlSucceed) {
                    saveRequestPerformanceLog(
                        sessionStorage.getItem('userGuid'),
                        sessionStorage.getItem('groupId')
                    );
                }

                //queryA(currentPage);

                $('.ajaxRequest').attr('disabled', false);
            }
        });
        
    }

    async function acceptEditB() {
        let data, actionUrl;

        $('#modal_editb').modal('hide');

        data = $('#formEditB').serializeObject();

        if (action == "add") {
            data.GUID = guidA
            data.INSERT_USER = sessionStorage.getItem("userGuid");
        } else {
            data.GUID = guidB
            data.UPDATE_USER = sessionStorage.getItem("userGuid");
        }

        switch (action) {
            case "add":
                actionUrl = "../api/ApiFactoryFloor/InsertB";
                break;
            case "edit":
                actionUrl = "../api/ApiFactoryFloor/UpdateB";
                break;
            case "delete":
                actionUrl = "../api/ApiFactoryFloor/DeleteB";
                break;
        }

        //取得目前頁面
        let currentPage = $('#dgB').datagrid('options').pageNumber;
        let getSqlSucceed = await getSql($('#funcName').val(), action, data);

        $.ajax({
            type: "POST",
            url: actionUrl,
            data: data,
            dataType: "json",
            success: function (response) {
                toastr.success(
                    globalDoc.getTextByKey('succeed'),
                    globalDoc.getTextByKey('prompt')
                );

                if (getSqlSucceed) {
                    saveRequestPerformanceLog(
                        sessionStorage.getItem('userGuid'),
                        sessionStorage.getItem('groupId')
                    );
                }

                queryA(currentPage);

                $('.ajaxRequest').attr('disabled', false);
            }
        });
    }
    function onSelectRowA(selectedGuid) {
        guidA = selectedGuid;
        queryParamsBind = new Object();
        queryParamsBind.GUIDA = guidA;

        $('#dgB').datagrid('gotoPage', 1);
    }
    
    //事件:顯示資料編輯視窗,動態更新標題用
    function onEditModalShow(e) {
        let formTitle = $('#span_action')[0];

        switch (action) {
            case "add":
                formTitle.innerText = globalDoc.getTextByKey("add");
                break;
            case "edit":
                formTitle.innerText = globalDoc.getTextByKey("edit");
                break;
        }

        $('#btnAcceptEditA').text(globalDoc.getTextByKey("ok"));
    }
    //事件:顯示資料編輯視窗,動態更新標題用
    function onEditModalShowB(e) {
        let formTitle = $('#span_action')[0];

        switch (action) {
            case "add":
                formTitle.innerText = globalDoc.getTextByKey("add");
                break;
            case "edit":
                formTitle.innerText = globalDoc.getTextByKey("edit");
                break;
        }

        $('#btnAcceptEditB').text(globalDoc.getTextByKey("ok"));
    }
    function bindTableToolBarOnClick(e) {
        let inputElms = document.forms["formEditB"].getElementsByTagName("input");;
        let clickedBtn = e.target;

        if ($(clickedBtn).linkbutton('options').disabled == true) return;

        switch (clickedBtn.id) {
            case "btnAdd_B":
                //action = "addBind";
                //$('#modal_addBind').modal('toggle');
                //for (let i = 0; i < inputElms.length; i++) {
                //    inputElms[i].value = "";
                //}
                action = "add";
                $('#modal_editb').modal('show');
                break;
            case "btnEdit_B":
                action = "edit";
                $.ajax({
                    type: "POST",
                    url: "../api/ApiFactoryFloor/GetOneByGUIDB",
                    data: { "GUID": guidB },
                    dataType: "json",
                    success: function (data) {
                        inputElms.ID.value = data.rows[0].ID;
                        inputElms.NAME.value = data.rows[0].NAME;
                        inputElms.REMARK.value = data.rows[0].REMARK;
                        $('#modal_editb').modal('show');
                    }
                });
                break;
            case "btnDelete_B":
                action = "delete";
                JQMessageBox(
                    globalDoc.getTextByKey('delete'),
                    globalDoc.getTextByKey('delMsg'),
                    {
                        'Y': globalDoc.getTextByKey('ok'),
                        'N': globalDoc.getTextByKey('cancel')
                    },
                    confirmDeleteB,
                    0
                );
                break;
            default:
        }
    }

    function confirmDeleteB(btnVal) {
        if (btnVal == 'Y') {
            acceptEditB();
        }
    }

    function beforeBindModalShow(e) {
        let inputElms = document.forms["formQueryB"].getElementsByTagName("input");
        //清空輸入欄位
        for (let i = 0; i < inputElms.length; i++) {
            inputElms[i].value = "";
        }
        //變更標題
        $('#bindModalTitle').text(doc.getTextByKey("selectUserToGroup"));
        queryParamsB = null;
    }

    //事件:關聯資料選擇視窗開啟
    function onBindModalShow(e) {
        $('#btnAddBind').text(globalDoc.getTextByKey('ok'));
        tableInitC();
        $('#dgC').datagrid('loadData', { "total": 0, "rows": [] });
        $('#btnAddBind').attr('disabled', true);
    }

    //查詢B表
    function queryB() {
        queryParamsB = new Object();
        queryParamsB = $('#formQueryB').serializeObject();
        $('#dgC').datagrid('options').queryParams = queryParamsB;
        $('#dgC').datagrid('gotoPage', 1);
    }

    //新增關聯
    function addBind() {
        let bindData = new Object();
        let BindGuids = [];

        //1.抓被選中的使用者,逐筆新增至陣列
        var rows = $('#dgC').datagrid('getSelections');
        for (var i = 0; i < rows.length; i++) {
            BindGuids.push(rows[i].GUID);
        }

        bindData.GuidA = guidA;
        bindData.BindGuids = BindGuids;
        bindData.UPDATE_USER = sessionStorage.getItem("userGuid");

        $.ajax({
            type: "POST",
            url: "../api/ApiFactoryFloor/InsertBind",
            data: bindData,
            dataType: "json",
            success: function (response) {
                toastr.success(
                    globalDoc.getTextByKey('succeed'),
                    globalDoc.getTextByKey('prompt')
                );
            },
            complete: function (response) {
                $('#btnAddBind').attr('disabled', false);
                onSelectRowA(guidA);
            }
        });
        $('#modal_addBind').modal('toggle');
    }

    async function deleteBind() {
        let data = new Object();
        let currentPage = $('#dgB').datagrid('options').pageNumber;
        let getSqlSucceed = await getSql($('#funcName').val(), action, data);
        data.GUID = guidBind;

        $.ajax({
            type: "POST",
            url: "../api/ApiFactoryFloor/DeleteBind",
            data: data,
            dataType: "json",
            success: function (response) {
                toastr.success(
                    globalDoc.getTextByKey('succeed'),
                    globalDoc.getTextByKey('prompt')
                );

                if (getSqlSucceed) {
                    saveRequestPerformanceLog(
                        sessionStorage.getItem('userGuid'),
                        sessionStorage.getItem('groupId')
                    );
                }

                onSelectRowA(guidA);

                $('.ajaxRequest').attr('disabled', false);
            }
        });
    }

    $(function () {
        doc = new Doc($('#funcName').val(), sessionStorage.getItem('userLng'));
        doc.searchFile().then((val) => {
            doc.converStaticElm("content");

            tableInitA();
            tableInitB();
            elementInit();
            pageEventBind();
        });
    });
</script>