@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!--單頁功能獨立樣式表-->
@section Custom
{
    <link href="~/Content/jq-content.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/jq-bootstrap-modal.css" rel="stylesheet" type="text/css" />
}
<div id="content" class="content-page">
    <input type="hidden" id="funcName" value="status" /> <!--頁面功能名稱,每頁必加-->
    <!--查詢條件區域-->
    <div class="form-group search-form">
        <div class="button btn-block" type="button" data-toggle="collapse" data-target="#searchConditions" aria-expanded="true" aria-controls="searchConditions">
            <span data-lngKey="searchCondition" class="caret">查詢條件</span>
        </div>
        <div id="searchConditions" class="collapse show search-content">
            <form id="formQuery">
                <div class="row">
                    <!--map_status-->
                    <div class="col-md-6 form-group">
                        <div class="form-label-group in-border must-input">
                            <select id="query_map_status" name="MAP_STATUS" class="form-control required">
                                <option value="">未選取</option>
                                <option value="工作中">工作中</option>
                                <option value="待機">待機</option>
                                <option value="故障">故障</option>
                            </select>
                            <label data-lngKey="map_status" for="query_map_status"></label>
                        </div>
                    </div>
                    <!--car_status-->
                    <div class="col-md-6 form-group">
                        <div class="form-label-group in-border must-input">
                            <select id="query_car_status" name="CAR_STATUS" class="form-control required">
                                <option value="">未選取</option>
                                <option value="AGV">AGV</option>
                                <option value="MR">MR</option>
                            </select>
                            <label data-lngKey="car_status" for="query_car_status"></label>
                        </div>
                    </div>
                    <!--agv_brand-->
                    <div class="col-md-6">
                        <!--floating-labels使用必加div外框與class屬性-->
                        <div class="form-label-group in-border must-input">
                            <input id="query_1" name="AGV_BRAND" type="text" class="form-control" />
                            <!--label必須放在input之後,否則文字會在輸入框內-->
                            <label data-lngKey="agv_brand" for="query_1"></label>
                        </div>
                    </div>
                    <!--agv_item-->
                    <div class="col-md-6">
                        <div class="form-label-group in-border must-input">
                            <input id="query_3" name="AGV_ITEM" type="text" class="form-control" />
                            <label data-lngKey="agv_item" for="query_3"></label>
                        </div>
                    </div>
                    <!--agv_status-->
                    <div class="col-md-6">
                        <div class="form-label-group in-border must-input">
                            <input id="query_4" name="AGV_STATUS" type="text" class="form-control" />
                            <label data-lngKey="agv_status" for="query_4"></label>
                        </div>
                    </div>
                    <!--status_name-->
                    <div class="col-md-6">
                        <div class="form-label-group in-border must-input">
                            <input id="query_2" name="STATUS_NAME" type="text" class="form-control" />
                            <label data-lngKey="status_name" for="query_2"></label>
                        </div>
                    </div>
                    <div class="col-md align-self-end align-items-end form-group">
                        <button data-lngKey="search" type="button" id="btnQuery" class="button float-right log"></button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!--資料顯示表格區-->
    <div class="tableParent">
        <div id="toolbar">
            <a href="#" id="btnAdd" class="easyui-linkbutton log" plain="true" data-lngKey="add"><i class="fas fa-file-medical fa-lg"></i></a>
            <a href="#" id="btnEdit" class="easyui-linkbutton log" plain="true" data-lngKey="edit"><i class="fas fa-file-signature fa-lg"></i></a>
            <a href="#" id="btnDelete" class="easyui-linkbutton log" plain="true" data-lngKey="delete"><i class="fas fa-trash-alt fa-lg"></i></a>
            <a href="#" id="btnExportOnGrid" class="easyui-linkbutton log" plain="true" data-lngKey="exportExcel"><i class="fas fa-file-export fa-lg"></i></a>
        </div>
        <table id="dg"></table>
    </div>

    <!--彈出式編輯視窗-->
    <div id="modal_edit" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title"><span id="span_action"></span></h4>
                    <button type="button" id="btnCloseModal_edit" class="close log" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <form id="formEdit">
                        <div class="row">
                            <div id="divAdd" class="col-md-6 form-group">
                                <div class="form-label-group in-border must-input">
                                    <select id="edit_map_status" name="MAP_STATUS" class="form-control required">
                                        <option value="工作中">工作中</option>
                                        <option value="待機">待機</option>
                                        <option value="故障">故障</option>
                                    </select>
                                    <label data-lngKey="map_status" for="edit_map_status"></label>
                                </div>
                            </div>

                            <div id="divAdd2" class="col-md-6 form-group">
                                <div class="form-label-group in-border must-input">
                                    <select id="edit_car_status" name="CAR_STATUS" class="form-control required">
                                        <option value="AGV">AGV</option>
                                        <option value="MR">MR</option>
                                    </select>
                                    <label data-lngKey="car_status" for="edit_car_status"></label>
                                </div>
                            </div>

                            <div id="divAdd4" class="col-md-6 form-group">
                                <div class="form-label-group in-border must-input">
                                    <input id="edit_agv_brand" name="AGV_BRAND" class="form-control" />
                                    <label for="edit_agv_brand" data-lngKey="agv_brand"></label>
                                </div>
                            </div>

                            <div id="divAdd4" class="col-md-6 form-group">
                                <div class="form-label-group in-border must-input">
                                    <input id="edit_agv_item" name="AGV_ITEM" class="form-control" />
                                    <label for="edit_agv_item" data-lngKey="agv_item"></label>
                                </div>
                            </div>

                            <div id="divAdd5" class="col-md-6 form-group">
                                <div class="form-label-group in-border must-input">
                                    <input id="edit_agv_status" name="AGV_STATUS" class="form-control" />
                                    <label for="edit_agv_status" data-lngKey="agv_status"></label>
                                </div>
                            </div>
                            
                            <div id="divAdd3" class="col-md-6 form-group">
                                <div class="form-label-group in-border must-input">
                                    <input id="edit_status_name" name="STATUS_NAME" class="form-control" />
                                    <label for="edit_status_name" data-lngKey="status_name"></label>
                                </div>
                            </div>

                            <div class="col-md-12 form-group">
                                <div class="form-label-group in-border must-input">
                                    <input id="edit_remark" name="REMARK" type="text" class="form-control" />
                                    <label for="edit_remark" data-lngKey="remark"></label>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnAccept" class="btn btn-primary log ajaxRequest" data-dismiss="modal" data-lngKey="ok">確定</button>
                </div>
            </div>
        </div>
    </div>


</div>

<script>
    let action = "";
    let selectedIndex;
    let selectedGUID;
    let snowTargetId
    let factoryGUID;
    let editMapStatusGUID;
    let queryfactoryGUID;
    let importfactoryGUID;
    let floortargetId;
    let maptargetId;
    let floorGUID = "";
    let mapGUID = "";
    let queryParams, queryParamsB, queryParamsC;
    let doc;
    let bannedModify = []; //禁止修改的欄位input name

    //頁面元件初始化
    function PageInit() {
        console.log('190');
        $('#dg').datagrid({
            url: '../api/ApiStatus/Query',
            method: 'POST',
            toolbar: '#toolbar',
            singleSelect: true,
            pagination: true, //顯示資料換頁工具列
            fit: true, //固定Grid高度,需指定
            sortName: 'GUID',
            emptyMsg: '<div style="text-align:center">No data.</div>',
            columns: [[
                { field: 'GUID', title: '', width: '0%', hidden: true },
                { field: 'MAP_STATUS', title: doc.getTextByKey('map_status'), sortable: true },
                { field: 'CAR_STATUS', title: doc.getTextByKey('car_status'), sortable: true },
                { field: 'AGV_BRAND', title: doc.getTextByKey('agv_brand'), sortable: true },
                { field: 'AGV_ITEM', title: doc.getTextByKey('agv_item'), sortable: true },
                { field: 'AGV_STATUS', title: doc.getTextByKey('agv_status'), sortable: true },
                { field: 'STATUS_NAME', title: doc.getTextByKey('status_name'), sortable: true },
                { field: 'REMARK', title: doc.getTextByKey('remark') }
            ]],
            onSelect: function (index, field) {
                selectedGUID = field.GUID;
                selectedIndex = index;

                $('#btnEdit').linkbutton('enable');
                $('#btnDelete').linkbutton('enable');

            },
            onBeforeLoad: function (param) {
                if (action != 'query') {
                    return false; //預設初次載入頁面不查詢
                } else {
                    //if (floorGUID === undefined) {
                    //    //return false; //無參數時不查詢
                    //} else {
                    //    param.FLOOR_GUID = floorGUID;
                    //}
                    //if (mapGUID === undefined) {
                    //    //return false; //無參數時不查詢
                    //} else {
                    //    param.MAP_GUID = mapGUID;
                    //}
                }
            },
            onLoadSuccess: function (rows) {
                selectedGUID = undefined;
                selectedIndex = undefined;

                $('#btnEdit').linkbutton('disable');
                $('#btnDelete').linkbutton('disable');
                //bindresize(this);
            }
        });

        //資料換頁工具列文字顯示
        var p = $('#dg').datagrid('getPager');
        $(p).pagination({
            pageSize: 10,
            pageList: [5, 10, 15],
            beforePageText: doc.getTextByKey('beforePageText'),
            afterPageText: doc.getTextByKey('afterPageText'),
            displayMsg: doc.getTextByKey('displayMsg')
        });

        $('#btnEdit').linkbutton('disable');
        $('#btnDelete').linkbutton('disable');
        $('#btnExportOnGrid').linkbutton('disable');

        //停用輸入欄位的自動完成
        let tagArr = document.getElementsByTagName("input");
        for (let i = 0; i < tagArr.length; i++) {
            tagArr[i].autocomplete = 'off';
        }

        //套用浮動輸入欄位標籤樣式
        let labels = document.getElementsByTagName('LABEL');
        for (let i = 0; i < labels.length; i++) {
            if (labels[i].htmlFor != '') {
                let elem = document.getElementById(labels[i].htmlFor);
                if (elem) {
                    elem.setAttribute("placeholder", labels[i].textContent);
                }
            }
        }

        //#region 彈出視窗設定
        $('#modal_edit').modal({
            show: false, //預設不顯示
            backdrop: 'static', //彈出視窗點背景無法關閉
            keyboard: false, //按Esc鍵不會關閉視窗
        });
        $('#modal_Floor').modal({
            show: false, //預設不顯示
            backdrop: 'static', //彈出視窗點背景無法關閉
            keyboard: false, //按Esc鍵不會關閉視窗
        });
        $('#modal_Map').modal({
            show: false, //預設不顯示
            backdrop: 'static', //彈出視窗點背景無法關閉
            keyboard: false, //按Esc鍵不會關閉視窗
        });
        //#endregion

        setNotNull();

        //設定事件綁定
        bindActionEvent();
        bindAjaxEvent();
        //refreshDorpDownListItems("edit_map_status", "../api/ApiStatus/GetDataList", "");
        //refreshDorpDownListItems("edit_car_status", "../api/ApiStatus/GetDataList", "");
        refreshDorpDownListItems("query_status", "../api/ApiStatus/GetDataList", "");
    }

    //事件綁定
    function PageEventBind() {
        $('#btnQuery').on('click', () => { Query(1) });
        $('#btnAdd').on('click', Add);
        $('#btnEdit').on('click', Edit);
        $('#btnDelete').on('click', Delete);
        $('#btnExportOnGrid').on('click', ExportOnClick);
        $('#btnAccept').on('click', Accept);
        $('.btn-confirm').on('click', Confirm);

        $('#edit_floor').on('click', FloorSnow);
        $('#query_floor').on('click', FloorSnow);
        $('#edit_map').on('click', FloorSnow);
        $('#query_map').on('click', FloorSnow);

        $('#edit_map_status').on('change', onSelectOptionChange);
        $('#edit_car_status').on('change', onSelectOptionChange);

        $('#query_map_status').on('change', onSelectOptionChange);
        $('#query_car_status').on('change', onSelectOptionChange);

        $('#btnQueryFloor').on('click', queryB);
        $('#btnFloor').on('click', floor);
        $('#btnQueryMap').on('click', queryC);
        $('#btnMap').on('click', map);

        $('#modal_edit').on('show.bs.modal', onEditModalShow);
        $('#modal_editb').on('show.bs.modal', onEditModalShowB);
        $('#modal_Floor').on('show.bs.modal', beforeFloorModalShow);
        $('#modal_Floor').on('shown.bs.modal', onFloorModalShow);
        $('#modal_Map').on('show.bs.modal', beforeFloorModalShow);
        $('#modal_Map').on('shown.bs.modal', onFloorModalShow);
        $(window).on("resize", resizeLayout);
    }


    //重設頁面元件大小
    function resizeLayout() {
        //重設手風琴選單大小
        $('#formQueryPanel').accordion('resize');
        //重設Grid大小
        $('#dg').datagrid('resize');
    }

    //必填欄位上色
    function setNotNull(tableName) {
        $('#edit_name').addClass('required');
        $('#edit_id').addClass('required');
    }

    //查詢
    async function Query(pageIdx) {
        action = 'query';
        selectedGUID = undefined;
        selectedIndex = undefined;

        $('#btnEdit').linkbutton('disable');
        $('#btnDelete').linkbutton('disable');

        queryParams = $('#formQuery').serializeObject();
        
        await new Promise((resolve, reject) => {
            $.ajax({
                type: "POST",
                url: "../api/ApiStatus/Count",
                data: queryParams,
                dataType: "json",
                success: function (response) {
                    queryParams.total = response.count;
                    resolve(queryParams);
                }
            });
        }).then((parms) => {
            $("#dg").datagrid('options').queryParams = parms;
            $('#dg').datagrid('gotoPage', pageIdx);

            return;
        }).then(() => {
            $('#btnExportOnGrid').linkbutton('enable');
            $('.ajaxRequest').attr('disabled', false);
        });
    }
    //查詢B表
    function queryB() {
        queryParamsB = new Object();
        queryParamsB = $('#formQueryB').serializeObject();
        $('#dgB').datagrid('options').queryParams = queryParamsB;
        $('#dgB').datagrid('gotoPage', 1);
    }
    function queryC() {
        queryParamsC = new Object();
        queryParamsC = $('#formQueryC').serializeObject();
        $('#dgC').datagrid('options').queryParams = queryParamsC;
        $('#dgC').datagrid('gotoPage', 1);
    }
    //樓層選擇
    function floor() {
        $('#modal_Floor').modal('hide');
    }
    //地圖選擇
    function map() {
        $('#modal_Map').modal('hide');
    }
    //新增,清空欄位後開窗
    function Add() {
        if ($(this).linkbutton('options').disabled == true) return;

        action = 'add';
        //selectedGUID = "";

        let elm = document.getElementById("formEdit");

        for (let i = 0; i < elm.length; i++) {
            elm[i].value = "";
            elm[i].disabled = false;
        }

        $('#modal_edit').modal('show');
    }

    //編輯
    function Edit() {
        if ($(this).linkbutton('options').disabled == true) return;

        let data = { GUID: selectedGUID };
        action = 'edit';

        $.ajax({
            type: "POST",
            url: "../api/ApiStatus/GetOneByGUID",
            data: data,
            dataType: "json",
            success: function (data) {
                let userData = data.rows[0];
                let elm = document.getElementById("formEdit");

                for (let i = 0; i < elm.length; i++) {
                    let name = elm[i].name;
                    $(elm[i]).val(userData[name]);

                    if (bannedModify.includes(name)) {

                    }
                }
            },
            complete: function (url) {
                $('#modal_edit').modal('show');
            }
        });
    }

    //刪除
    function Delete() {
        if ($(this).linkbutton('options').disabled == true) return;

        action = 'delete';

        JQMessageBox(
            globalDoc.getTextByKey('confirm'),
            globalDoc.getTextByKey('delMsg'),
            {
                'Y': globalDoc.getTextByKey('y'),
                'N': globalDoc.getTextByKey('n')
            },
            Confirm
        );
    }
    //樓層選擇開窗
    function FloorSnow(e) {
        let targetId = e.target.id;
        snowTargetId = e.target.id;

        switch (targetId) {
            case "query_floor":
                factoryGUID = queryfactoryGUID;
                floortargetId = targetId;
                $('#modal_Floor').modal('show');
                break;
            case "edit_floor":
                factoryGUID = editMapStatusGUID;
                floortargetId = targetId;
                $('#modal_Floor').modal('show');
                break;
            case "import_floor":
                factoryGUID = importfactoryGUID;
                floortargetId = targetId;
                $('#modal_Floor').modal('show');
                break;
            case "query_map":
                factoryGUID = queryfactoryGUID;
                maptargetId = targetId;
                $('#modal_Map').modal('show');
                break;
            case "edit_map":
                factoryGUID = editMapStatusGUID;
                maptargetId = targetId;
                $('#modal_Map').modal('show');
                break;
        }

    }

    function beforeFloorModalShow(e) {
        let targetId = e.target.id;
        let inputElms;
        switch (targetId) {
            case "modal_Floor":
                inputElms = document.forms["formQueryB"].getElementsByTagName("input");
                //清空輸入欄位
                for (let i = 0; i < inputElms.length; i++) {
                    inputElms[i].value = "";
                }
                $('#floorModalTitle').text(doc.getTextByKey("selectFloor"));
                queryParamsB = null;
                break;
            case "modal_Map":
                inputElms = document.forms["formQueryC"].getElementsByTagName("input");
                //清空輸入欄位
                for (let i = 0; i < inputElms.length; i++) {
                    inputElms[i].value = "";
                }
                $('#mapModalTitle').text(doc.getTextByKey("selectMap"));
                queryParamsC = null;
                break;
        }
    }
    //事件:樓層選擇視窗開啟
    function onFloorModalShow(e) {
        let targetId = e.target.id;
        switch (targetId) {
            case "modal_Floor":
                $('#btnFloor').text(globalDoc.getTextByKey('ok'));

                tableInitB();
                $('#dgB').datagrid('loadData', { "total": 0, "rows": [] });
                $('#btnFloor').attr('disabled', true);
            case "modal_Map":
                $('#btnMap').text(globalDoc.getTextByKey('ok'));

                tableInitC();
                $('#dgC').datagrid('loadData', { "total": 0, "rows": [] });
                $('#btnMap').attr('disabled', true);
                break;
        }
    }
    function tableInitB() {
        $('#dgB').datagrid({
            url: '../api/ApiFloor/Query',
            method: 'POST',
            singleSelect: true,
            height: 350,
            sortName: 'ID',
            emptyMsg: '<div style="text-align:center">No data.</div>',
            columns: [[
                { field: 'GUID', title: '', width: '0%', hidden: true },
                { field: 'ID', title: doc.getTextByKey('floorId'), width: '50%', sortable: true },
                { field: 'NAME', title: doc.getTextByKey('floorName'), width: '50%', sortable: true }
            ]],
            onSelect: function (index, field) {
                $('#btnFloor').attr('disabled', false);
                floorGUID = field.GUID;
                if (floortargetId == "edit_floor") {
                    $('#edit_floor').val(field.NAME);
                    $('#edit_map').val("");
                }
                if (floortargetId == "query_floor") {
                    $('#query_floor').val(field.NAME);
                    $('#query_map').val("");
                }
            }, onBeforeLoad: function (param) {
                if (queryParamsB === null) {
                    return false; //無參數時不查詢
                } else {
                    param.FACTORY_GUID = factoryGUID;
                }
            }, onLoadSuccess: function (rows) {
                $('#btnQueryFloor').attr('disabled', false);
                $('#btnFloor').attr('disabled', true);
                guidB = null;
            }
        });

    }
    function tableInitC() {
        $('#dgC').datagrid({
            url: '../api/ApiMap/Query',
            method: 'POST',
            singleSelect: true,
            height: 350,
            sortName: 'ID',
            emptyMsg: '<div style="text-align:center">No data.</div>',
            columns: [[
                { field: 'GUID', title: '', width: '0%', hidden: true },
                { field: 'ID', title: doc.getTextByKey('mapId'), width: '50%', sortable: true },
                { field: 'NAME', title: doc.getTextByKey('mapName'), width: '50%', sortable: true }
            ]],
            onSelect: function (index, field) {
                $('#btnMap').attr('disabled', false);
                mapGUID = field.GUID;
                if (maptargetId == "edit_map") {
                    $('#edit_map').val(field.NAME);
                }
                if (maptargetId == "query_map") {
                    $('#query_map').val(field.NAME);
                }
            }, onBeforeLoad: function (param) {
                if (queryParamsC === null) {
                    return false; //無參數時不查詢
                } else {
                    if (floorGUID != undefined) {
                        param.FLOOR_GUID = floorGUID;
                    }
                    if (factoryGUID != undefined) {
                        param.FACTORY_GUID = factoryGUID;
                    }
                }
            }, onLoadSuccess: function (rows) {
                $('#btnQueryMap').attr('disabled', false);
                $('#btnMap').attr('disabled', true);
                guidC = null;
            }
        });

    }
    //事件:顯示資料編輯視窗,動態更新標題用
    function onEditModalShow(e) {
        let formTitle = $('#span_action')[0];

        switch (action) {
            case "add":
                formTitle.innerText = globalDoc.getTextByKey("add");
                break;
            case "edit":
                formTitle.innerText = globalDoc.getTextByKey("edit");
                break;
        }

        $('#btnAccept').text(globalDoc.getTextByKey("ok"));
    }
    //事件:顯示資料編輯視窗,動態更新標題用
    function onEditModalShowB(e) {
        let formTitle = $('#span_action')[0];

        switch (action) {
            case "add":
                formTitle.innerText = globalDoc.getTextByKey("add");
                break;
            case "edit":
                formTitle.innerText = globalDoc.getTextByKey("edit");
                break;
        }

        $('#btnAccept').text(globalDoc.getTextByKey("ok"));
    }
    //匯出(從DataGrid)
    function ExportOnClick() {
        if ($(this).linkbutton('options').disabled == true) return;
        Export();
    }

    //匯出(從DB)
    function Export() {
        $.post("../api/ApiStatus/Export", queryParams, function (response) {
            let url = response.filePath;
            let $a = $('<a />', {
                'href': url,
                'download': null,
                'text': "click"
            }).hide().appendTo("body")[0].click();

            URL.revokeObjectURL(url);
            $('.ajaxRequest').attr('disabled', false);
        });
    }

    //資料異動確認
    async function Accept() {
        let data, actionUrl, guid;
        let edit_map_status = $('#edit_map_status').val();
        let edit_car_status = $('#edit_car_status').val();
        let edit_status_name = $('#edit_status_name').val();
        let edit_agv_brand = $('#edit_agv_brand').val();
        let edit_agv_item = $('#edit_agv_item').val();
        let edit_agv_status = $('#edit_agv_status').val();
        let edit_remark = $('#edit_remark').val();
        $('#modal_edit').modal('hide');
        $('#btnAccept').attr('disabled', false);

        data = $('#formEdit').serializeObject();//轉成JSON物件
        if (action == "add") {
            data.INSERT_USER = sessionStorage.getItem("userGuid");
            data.MAP_STATUS = edit_map_status;
            data.CAR_STATUS = edit_car_status;
        } else {
            data.GUID = selectedGUID
            data.UPDATE_USER = sessionStorage.getItem("userGuid");
        }

        switch (action) {
            case "add":
                actionUrl = "../api/ApiStatus/Insert";
                break;
            case "edit":
                actionUrl = "../api/ApiStatus/Update";
                break;
            case "delete":
                actionUrl = "../api/ApiStatus/Delete";
                break;
        }
        //取得目前頁面
        let currentPage = $('#dg').datagrid('options').pageNumber;
        let getSqlSucceed = await getSql($('#funcName').val(), action, data);
        
        //未輸入的資料顯示錯誤
        if (action === 'add') {
            if (edit_map_status === null || edit_car_status === null || edit_status_name === '' || edit_agv_brand === '' || edit_agv_item === '' || edit_agv_status === '') {
                toastr.error(
                    globalDoc.getTextByKey('error'),
                    globalDoc.getTextByKey('輸入資料不完整')
                );
                return;
            }
        }

        $.ajax({
            type: "POST",
            url: actionUrl,
            data: data,
            dataType: "json",
            success: function (response) {
                toastr.success(
                    globalDoc.getTextByKey('succeed'),
                    globalDoc.getTextByKey('prompt')
                );
                guid = response.guid;
                if (getSqlSucceed) {
                    saveRequestPerformanceLog(
                        sessionStorage.getItem('userGuid'),
                        sessionStorage.getItem('groupId')
                    );
                }
                if (action == "add") {
                    
                    $('#dg').datagrid('insertRow', {
                        //index: 15, // 索引從 0
                        row: {
                            GUID: guid,
                            MAP_STATUS: edit_map_status,
                            CAR_STATUS: edit_car_status,
                            STATUS_NAME: edit_status_name,
                            AGV_BRAND: edit_agv_brand,
                            AGV_ITEM: edit_agv_item,
                            AGV_STATUS: edit_agv_status,
                            REMARK: edit_remark
                        }
                    });
                } else {
                    Query(currentPage);
                }

                $('.ajaxRequest').attr('disabled', false);
            }
        });
        
    }

    //確認視窗按鈕動作
    function Confirm(btnVal) {
        switch (btnVal) {
            case 'Y':
                switch (action) {
                    case 'delete':
                        Accept();
                        break;
                }
                break;
            case 'N':

                break;
            case 'export':
                Export();
                break;
        }
    }

    //[DataGrid]轉換時間格式
    function convertTime(value, row, index) {
        return value.replace('T', ' ');
    }

    //#region 下拉選單方法群

    //刷新下拉選單項目(參數:目標select元件ID,資料來源URL,傳送參數) [是否移至共用區?]
    function refreshDorpDownListItems(targetSelectElementId, dataSourceUrl, parameters) {
        let elm = $('#' + targetSelectElementId);
        let optionElm = document.createElement("option");
        optionElm.setAttribute("value", "");

        //setElmLanguage(optionElm, "plzChoice");

        //移除並加入預設選項
        elm.find('option').remove().end();
        elm.append(optionElm);

        //沒輸入資料來源Url直接結束
        if (typeof (dataSourceUrl) == undefined) {
            return;
        }

        $.ajax({
            type: "POST",
            url: dataSourceUrl,
            data: parameters,
            dataType: "json",
            success: function (data) {
                data.rows.forEach(function (item) {
                    elm.append(`<option value="${item.Key}">${item.Value}</option>`);
                });

                elm.prop('selectedIndex', 0);
            }
        });
    }

    //下拉選單更改選取
    function onSelectOptionChange(e) {
        let targetId = e.target.id;
        let selectedValue = e.target.value;
        switch (targetId) {
            case "query_status":
                queryfactoryGUID = e.target.value;
                $('#query_floor').val("");
                $('#query_map').val("");
                floorGUID = "";
                mapGUID = "";
                break;
        }
    }
    //#endregion

    //#region 驗證方法群
    //日期驗證(日期A,日期B,條件:=>,<=)
    function dateTimeValidation(dateTimeA, dateTimeB, condition) {
        let offset = Date.parse(dateTimeA).valueOf() - Date.parse(dateTimeB).valueOf();

        if (Number.isNaN(offset)) {
            return true;
        }

        switch (condition) {
            case '<=':
                return offset <= 0 ? true : false;
                break;
            case '>=':
                return offset >= 0 ? true : false;
                break;
            case '<':
                return offset < 0 ? true : false;
                break;
            case '>':
                return offset > 0 ? true : false;
                break;
        }
    }

    
    
    //#endregion

    $(function () {
        doc = new Doc($('#funcName').val(), sessionStorage.getItem('userLng'), 'content');
        doc.searchFile().then((val) => {
            doc.converStaticElm("content");
            PageInit();
            PageEventBind();
        });
    });

</script>
